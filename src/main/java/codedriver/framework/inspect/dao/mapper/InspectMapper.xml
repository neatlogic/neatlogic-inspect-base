<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="codedriver.framework.inspect.dao.mapper.InspectMapper">


    <select id="searchInspectCiCombopList" resultType="codedriver.framework.inspect.dto.InspectCiCombopVo">
        select icc.ci_id     as id,
               icc.combop_id as combopId,
               ac.name       as combopName
        from inspect_ci_combop icc
                 join autoexec_combop ac on icc.combop_id = ac.id
    </select>
    <select id="getCombopIdByCiId" resultType="java.lang.Long">
        select combop_id
        from inspect_ci_combop
        where ci_id = #{value}
    </select>

    <insert id="replaceInspectCiCombopList">
        replace into inspect_ci_combop(ci_id, combop_id)
        values
        <foreach collection="ciVoList" item="ciVo" separator=",">
            ( #{ciVo.id}, #{ciVo.combopId})
        </foreach>
    </insert>

    <resultMap id="inspectResourceMap" type="codedriver.framework.inspect.dto.InspectResourceVo">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="abbr_name" property="abbrName"/>
        <result column="type_id" property="typeId"/>
        <result column="type_name" property="typeName"/>
        <result column="type_label" property="typeLabel"/>
        <result column="inspect_status" property="inspectStatus"/>
        <result column="inspect_time" property="inspectTime"/>
        <result column="monitor_status" property="monitorStatus"/>
        <result column="monitor_time" property="monitorTime"/>
        <result column="maintenance_window" property="maintenanceWindow"/>
        <result column="description" property="description"/>
        <result column="network_area" property="networkArea"/>
        <result column="port" property="port"/>
        <result column="ip" property="ip"/>
        <result column="state_id" property="stateId"/>
        <result column="state_name" property="stateName"/>
        <result column="datacenter_id" property="dataCenterId"/>
        <result column="datacenter_name" property="dataCenterName"/>
        <result column="env_id" property="envId"/>
        <result column="env_name" property="envName"/>
        <result column="app_module_id" property="appModuleId"/>
        <result column="app_module_name" property="appModuleName"/>
        <result column="app_module_abbr_name" property="appModuleAbbrName"/>
        <result column="app_system_id" property="appSystemId"/>
        <result column="app_system_name" property="appSystemName"/>
        <result column="app_system_abbr_name" property="appSystemAbbrName"/>
        <result column="cluster_id" property="clusterId"/>
        <result column="cluster_name" property="clusterName"/>
        <result column="cluster_type_id" property="clusterTypeId"/>
        <collection property="bgList" ofType="codedriver.framework.cmdb.dto.resourcecenter.BgVo">
            <id column="bg_id" property="bgId"/>
            <result column="bg_name" property="bgName"/>
        </collection>
        <collection property="ownerList" ofType="codedriver.framework.cmdb.dto.resourcecenter.OwnerVo">
            <id column="user_id" property="userId"/>
            <result column="user_uuid" property="uuid"/>
            <result column="user_name" property="userName"/>
        </collection>
        <collection property="allIp" ofType="codedriver.framework.cmdb.dto.resourcecenter.IpVo">
            <id column="allip_id" property="id"/>
            <result column="allip_ip" property="ip"/>
            <result column="allip_label" property="label"/>
        </collection>
        <collection property="jobPhaseNodeVo" ofType="codedriver.framework.autoexec.dto.job.AutoexecJobPhaseNodeVo">
            <id column="inspectJobPhaseNodeId" property="id"/>
            <result column="jobId" property="jobId"/>
            <result column="jobPhaseNodeStatus" property="status"/>
        </collection>
        <collection property="tagList" ofType="java.lang.String">
            <result column="tagName"/>
        </collection>
    </resultMap>

    <sql id="resource_inspect_autoexec_job_where">
        AND a.`type_id` IN
        ( SELECT a.`id` FROM `cmdb_ci` a WHERE a.lft &gt;= #{lft} AND a.rht &lt;= #{rht})
        <if test="stateIdList != null and stateIdList.size() > 0">
            AND a.`state_id` IN
            <foreach collection="stateIdList" item="stateId" open="(" separator="," close=")">
                #{stateId}
            </foreach>
        </if>
        <if test="envIdList != null and envIdList.size() > 0">
            AND a.`env_id` IN
            <foreach collection="envIdList" item="envId" open="(" separator="," close=")">
                #{envId}
            </foreach>
        </if>
        <if test="appSystemIdList != null and appSystemIdList.size() > 0">
            AND a.`app_system_id` IN
            <foreach collection="appSystemIdList" item="appSystemId" open="(" separator="," close=")">
                #{appSystemId}
            </foreach>
        </if>
        <if test="appModuleIdList != null and appModuleIdList.size() > 0">
            AND a.`app_module_id` IN
            <foreach collection="appModuleIdList" item="appModuleId" open="(" separator="," close=")">
                #{appModuleId}
            </foreach>
        </if>
        <if test="inspectStatusList != null and inspectStatusList.size() > 0">
            AND a.`inspect_status` IN
            <foreach collection="inspectStatusList" item="inspectStatus" open="(" separator="," close=")">
                #{inspectStatus}
            </foreach>
        </if>
        <if test="inspectJobPhaseNodeStatusList != null and inspectJobPhaseNodeStatusList.size() > 0">
            AND ajpn.`status` IN
            <foreach collection="inspectJobPhaseNodeStatusList" item="inspectJobPhaseNodeStatus" open="("
                     separator="," close=")">
                #{inspectJobPhaseNodeStatus}
            </foreach>
        </if>
        <if test="protocolIdList != null and protocolIdList.size() > 0">
            AND cra.`protocol_id` IN
            <foreach collection="protocolIdList" item="protocolId" open="("
                     separator="," close=")">
                #{protocolId}
            </foreach>
        </if>
        <if test="tagIdList != null and tagIdList.size() > 0">
            AND crrt.`tag_id` IN
            <foreach collection="tagIdList" item="tagId" open="("
                     separator="," close=")">
                #{tagId}
            </foreach>
        </if>
    </sql>

    <sql id="resource_inspect_autoexec_job_from_join">
        FROM @{DATA_SCHEMA}.`scence_ipobject_detail` a
        left join autoexec_job_resource_inspect ajri on ajri.resource_id=a.id
        left join cmdb_resourcecenter_resource_account crra on crra.resource_id=a.id
        left join cmdb_resourcecenter_account cra on cra.id=crra.account_id
        left join cmdb_resourcecenter_resource_tag crrt on crrt.resource_id = a.id
        left join autoexec_job_phase_node ajpn on ajpn.job_phase_id =ajri.phase_id AND ajpn.resource_id = a.id
    </sql>

    <sql id="resource_inspect_autoexec_job_node_where">
        AND a.`type_id` IN
        ( SELECT a.`id` FROM `cmdb_ci` a WHERE a.lft &gt;= #{searchVo.lft} AND a.rht &lt;= #{searchVo.rht})
        <if test="searchVo.stateIdList != null and searchVo.stateIdList.size() > 0">
            AND a.`state_id` IN
            <foreach collection="searchVo.stateIdList" item="stateId" open="(" separator="," close=")">
                #{stateId}
            </foreach>
        </if>
        <if test="searchVo.envIdList != null and searchVo.envIdList.size() > 0">
            AND a.`env_id` IN
            <foreach collection="searchVo.envIdList" item="envId" open="(" separator="," close=")">
                #{envId}
            </foreach>
        </if>
        <if test="searchVo.appSystemIdList != null and searchVo.appSystemIdList.size() > 0">
            AND a.`app_system_id` IN
            <foreach collection="searchVo.appSystemIdList" item="appSystemId" open="(" separator="," close=")">
                #{appSystemId}
            </foreach>
        </if>
        <if test="searchVo.appModuleIdList != null and searchVo.appModuleIdList.size() > 0">
            AND a.`app_module_id` IN
            <foreach collection="searchVo.appModuleIdList" item="appModuleId" open="(" separator="," close=")">
                #{appModuleId}
            </foreach>
        </if>
        <if test="searchVo.inspectStatusList != null and searchVo.inspectStatusList.size() > 0">
            AND cci.`inspect_status` IN
            <foreach collection="searchVo.inspectStatusList" item="inspectStatus" open="(" separator="," close=")">
                #{inspectStatus}
            </foreach>
        </if>
        <if test="searchVo.inspectJobPhaseNodeStatusList != null and searchVo.inspectJobPhaseNodeStatusList.size() > 0">
            AND ajpn.`status` IN
            <foreach collection="searchVo.inspectJobPhaseNodeStatusList" item="inspectJobPhaseNodeStatus" open="("
                     separator="," close=")">
                #{inspectJobPhaseNodeStatus}
            </foreach>
        </if>
        <if test="searchVo.protocolIdList != null and searchVo.protocolIdList.size() > 0">
            AND cra.`protocol_id` IN
            <foreach collection="searchVo.protocolIdList" item="protocolId" open="("
                     separator="," close=")">
                #{protocolId}
            </foreach>
        </if>
        <if test="searchVo.tagIdList != null and searchVo.tagIdList.size() > 0">
            AND crrt.`tag_id` IN
            <foreach collection="searchVo.tagIdList" item="tagId" open="("
                     separator="," close=")">
                #{tagId}
            </foreach>
        </if>
    </sql>

    <sql id="resource_inspect_autoexec_job_node_from_join">
        FROM @{DATA_SCHEMA}.`scence_ipobject_detail` a
        left join autoexec_job_resource_inspect ajri on ajri.resource_id=a.id
        left join cmdb_resourcecenter_resource_account crra on crra.resource_id=a.id
        left join cmdb_resourcecenter_account cra on cra.id=crra.account_id
        left join cmdb_resourcecenter_resource_tag crrt on crrt.resource_id = a.id
        LEFT JOIN autoexec_job_phase_node ajpn ON ajpn.resource_id = a.id
        LEFT JOIN cmdb_cientity_inspect cci ON cci.ci_entity_id = a.id AND cci.job_id= ajpn.job_id
    </sql>

    <select id="getInspectResourceListByIdList" parameterType="java.lang.Long" resultMap="inspectResourceMap">
        SELECT
        a.`id`,
        a.`ip`,
        a.`port`,
        a.`type_id`,
        a.`type_name`,
        a.`type_label`,
        a.`name`,
        a.`monitor_status`,
        a.`monitor_time`,
        a.`inspect_status`,
        a.`inspect_time`,
        a.`network_area`,
        a.`maintenance_window`,
        a.`description`,
        a.`app_module_id`,
        a.`app_module_name`,
        a.`app_module_abbr_name`,
        a.`app_system_id`,
        a.`app_system_name`,
        a.`app_system_abbr_name`,
        a.`allip_id`,
        a.`allip_ip`,
        a.`allip_label`,
        a.`bg_id`,
        a.`bg_name`,
        a.`user_id`,
        a.`user_uuid`,
        a.`user_name`,
        a.`state_id`,
        a.`state_name`,
        a.`state_label`,
        a.`env_id`,
        a.`env_name`,
        ajpn.id as inspectJobPhaseNodeId,
        ajpn.`job_id` AS jobId,
        ajpn.status as jobPhaseNodeStatus,
        ct.name as tagName
        <include refid="resource_inspect_autoexec_job_from_join"/>
        left join cmdb_tag ct on ct.id = crrt.tag_id
        WHERE a.`id` IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getInspectResourceCount" resultType="int">
        SELECT COUNT(DISTINCT (a.`id`))
        <include refid="resource_inspect_autoexec_job_from_join"/>
        <where>
            <if test="keyword != null and keyword != ''">
                AND (a.`name` LIKE CONCAT('%', #{keyword}, '%') OR a.`ip` LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <include refid="resource_inspect_autoexec_job_where"/>
        </where>
    </select>

    <select id="getInspectResourceCountByIpKeyword" resultType="int">
        SELECT COUNT(DISTINCT (a.`id`))
        <include refid="resource_inspect_autoexec_job_from_join"/>
        <where>
            <if test="keyword != null and keyword != ''">
                AND a.`ip` LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <include refid="resource_inspect_autoexec_job_where"/>
        </where>
    </select>

    <select id="getInspectResourceCountByNameKeyword" resultType="int">
        SELECT COUNT(DISTINCT (a.`id`))
        <include refid="resource_inspect_autoexec_job_from_join"/>
        <where>
            <if test="keyword != null and keyword != ''">
                AND a.`name` LIKE CONCAT('%', #{keyword}, '%')
            </if>
            <include refid="resource_inspect_autoexec_job_where"/>
        </where>
    </select>

    <select id="getInspectResourceIdList" resultType="java.lang.Long">
        SELECT m.`id` FROM (
        SELECT distinct a.`id`, a.`name`, a.`ip`
        <include refid="resource_inspect_autoexec_job_from_join"/>
        <where>
            <if test="keyword != null and keyword != ''">
                AND (a.`name` LIKE CONCAT('%', #{keyword}, '%') OR a.`ip` LIKE CONCAT('%', #{keyword}, '%'))
            </if>
            <include refid="resource_inspect_autoexec_job_where"/>
        </where>
        <choose>
            <when test="isNameFieldSort != null and isNameFieldSort == 1">
                ORDER BY LENGTH(a.`name`)
            </when>
            <when test="isIpFieldSort != null and isIpFieldSort == 1">
                ORDER BY LENGTH(a.`ip`)
            </when>
            <otherwise>
                ORDER BY a.`id`
            </otherwise>
        </choose>
        LIMIT #{startNum}, #{pageSize}
        ) m
    </select>

    <select id="getInspectAutoexecJobNodeResourceCount" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT (a.`id`))
        <include refid="resource_inspect_autoexec_job_node_from_join"/>
        <where>
            <if test="searchVo.keyword != null and searchVo.keyword != ''">
                AND (a.`name` LIKE CONCAT('%', #{searchVo.keyword}, '%') OR a.`ip` LIKE CONCAT('%', #{searchVo.keyword},
                '%'))
            </if>
            <include refid="resource_inspect_autoexec_job_node_where"/>
        </where>
        and ajpn.job_id = #{jobId}
    </select>

    <select id="getInspectAutoexecJobNodeResourceCountByIpKeyword" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT (a.`id`))
        <include refid="resource_inspect_autoexec_job_node_from_join"/>
        <where>
            <if test="searchVo.keyword != null and searchVo.keyword != ''">
                AND (a.`name` LIKE CONCAT('%', #{searchVo.keyword}, '%') OR a.`ip` LIKE CONCAT('%', #{searchVo.keyword},
                '%'))
            </if>
            <include refid="resource_inspect_autoexec_job_node_where"/>
        </where>
        and ajpn.job_id = #{jobId}
    </select>

    <select id="getInspectAutoexecJobNodeResourceCountByNameKeyword" resultType="java.lang.Integer">
        SELECT COUNT(DISTINCT (a.`id`))
        <include refid="resource_inspect_autoexec_job_node_from_join"/>
        <where>
            <if test="searchVo.keyword != null and searchVo.keyword != ''">
                AND (a.`name` LIKE CONCAT('%', #{searchVo.keyword}, '%') OR a.`ip` LIKE CONCAT('%', #{searchVo.keyword},
                '%'))
            </if>
            <include refid="resource_inspect_autoexec_job_node_where"/>
        </where>
        and ajpn.job_id = #{jobId}
    </select>

    <select id="getInspectAutoexecJobNodeResourceIdList" resultType="java.lang.Long">
        SELECT m.`id` FROM (
        SELECT distinct a.`id`, a.`name`, a.`ip`
        <include refid="resource_inspect_autoexec_job_node_from_join"/>
        <where>
            <if test="searchVo.keyword != null and searchVo.keyword != ''">
                AND (a.`name` LIKE CONCAT('%', #{searchVo.keyword}, '%') OR a.`ip` LIKE CONCAT('%', #{searchVo.keyword},
                '%'))
            </if>
            <include refid="resource_inspect_autoexec_job_node_where"/>
        </where>
        and ajpn.job_id = #{jobId}
        <choose>
            <when test="searchVo.isNameFieldSort != null and searchVo.isNameFieldSort == 1">
                ORDER BY LENGTH(a.`name`)
            </when>
            <when test="searchVo.isIpFieldSort != null and searchVo.isIpFieldSort == 1">
                ORDER BY LENGTH(a.`ip`)
            </when>
            <otherwise>
                ORDER BY a.`id`
            </otherwise>
        </choose>
        LIMIT #{searchVo.startNum}, #{searchVo.pageSize}
        ) m
    </select>

    <select id="getInspectResourceListByIdListAndJobId" parameterType="java.lang.Long"
            resultMap="inspectResourceMap">
        SELECT
        a.ip,
        a.port,
        a.name,
        a.type_name,
        a.type_label,
        a.id,
        a.network_area,
        a.type_id,
        a.allip_id,
        a.allip_ip,
        a.allip_label,
        a.bg_id,
        a.bg_name,
        a.user_id,
        a.user_uuid,
        a.user_name,
        a.state_id,
        a.state_name,
        cci.inspect_status,
        cci.inspect_time,
        ajpn.id as inspectJobPhaseNodeId,
        ajpn.`job_id` AS jobId,
        ajpn.status as jobPhaseNodeStatus,
        ct.id as tagId,
        ct.name as tagName,
        ct.description as tagDescription
        <include refid="resource_inspect_autoexec_job_node_from_join"/>
        left join cmdb_tag ct on ct.id = crrt.tag_id
        WHERE a.`id` IN
        <foreach collection="idList" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        and ajpn.job_id = #{jobId}
    </select>


    <select id="getResourceScriptListByResourceIdList"
            parameterType="java.util.List"
            resultType="codedriver.framework.inspect.dto.InspectResourceScriptVo">
        SELECT
        `resource_id` AS resourceId,
        `script_id` AS scriptId,
        `config` as configStr
        FROM `inspect_accessendpoint_script`
        WHERE `resource_id` in
        <foreach collection="resourceIdList" item="resourceId" open="(" separator="," close=")">
            #{resourceId}
        </foreach>
    </select>

    <select id="getResourceScriptByResourceId"
            resultType="codedriver.framework.inspect.dto.InspectResourceScriptVo">
        select `resource_id` as resourceId,
               `script_id`   as scriptId,
               `config`      as configStr
        from `inspect_accessendpoint_script`
        WHERE `resource_id` = #{value}
    </select>

    <select id="getCiEntityInspectByJobIdAndCiEntityIdList"
            resultType="codedriver.framework.cmdb.dto.cientity.CiEntityInspectVo">
        SELECT
        `id`,
        `job_id` as jobId,
        `ci_entity_id` as ciEntityId,
        `inspect_status` as inspectStatus,
        `inspect_time` as inspectTime
        FROM `cmdb_cientity_inspect`
        WHERE `job_id` = #{jobId}
        AND `ci_entity_id` IN
        <foreach collection="ciEntityIdList" item="ciEntityId" open="(" separator="," close=")">
            #{ciEntityId}
        </foreach>
    </select>

    <insert id="insertResourceScript">
        insert into `inspect_accessendpoint_script`(`resource_id`, `script_id`, `config`)
        values (#{resourceId}, #{scriptId}, #{config})
    </insert>
    <insert id="insertInspectAlertEveryday">
        insert into `inspect_alert_everyday`(`resource_id`, `report_time`, `alert_level`, `alert_object`, `alert_rule`,
                                             `alert_tips`, `alert_value`)
        values (#{resourceId}, #{reportTime}, #{alertLevel}, #{alertObject}, #{alertRule}, #{alertTips}, #{alertValue})
        ON DUPLICATE KEY UPDATE
        `report_time` = #{reportTime},
        `alert_rule` = #{alertRule},
        `alert_value` = #{alertValue},
        `alert_tips` = #{alertTips};
    </insert>

    <delete id="deleteResourceScriptByResourceId">
        delete
        from `inspect_accessendpoint_script`
        where `resource_id` = #{value}
    </delete>

</mapper>

